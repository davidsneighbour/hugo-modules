img:not([alt]),
img[alt="Alt Text"],
img[alt=""]:not([role="none presentation"]):not([role="presentation"]) {
  outline: 20px dashed red !important;
  outline-offset: 20px !important;
}

img[alt^="image of" i],
img[alt^="picture of" i] {
  outline: 20px dotted darkorange !important;
  outline-offset: 20px !important;
}

img:not([width]),
img:not([height]) {
  outline: 20px dotted darkorange !important;
  outline-offset: 20px !important;
}

img:not[longdesc] {
  outline: 20px dotted darkorange !important;
  outline-offset: 20px !important;
}

/*******************************************************************************
 * Indicator styles
 ******************************************************************************/
.responsive-indicator {

  @extend .bg-dark-subtle;
  @extend .rounded-end;
  @extend .mt-3;
  @extend .fontsize-1;

  @extend .position-fixed;
  @extend .bottom-0;
  @extend .left-0 !optional;

  @include media-breakpoint-down(md) {
    width: 100%;
  }

  @include media-breakpoint-up(md) {
    width: 50%;
  }

  &>div {
    @extend .d-flex;
    @extend .p-2;
    @extend .flex-row;
    @extend .justify-content-center;
    @extend .align-items-center;
    @extend .column-gap-3;

    .identifier {
      @extend .text-uppercase;
    }
  }

  @property --_w {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vw;
  }

  @property --_h {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vh;
  }

  :root {
    --w: tan(atan2(var(--_w), 1px));
    --h: tan(atan2(var(--_h), 1px));
  }

  .measurements:before {
    content: counter(w) "x" counter(h) "px";
    counter-reset: h var(--h) w var(--w);
    width: fit-content;
    height: fit-content;
  }

}
