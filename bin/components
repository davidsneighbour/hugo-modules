#!/bin/bash
# shellcheck disable=SC1091

#set -eo pipefail # http://redsymbol.net/articles/unofficial-bash-strict-mode

REQUIRED_TOOLS=(
  inkscape
  optipng
  sed
  curl
  jq
)

for TOOL in "${REQUIRED_TOOLS[@]}"; do
  if ! command -v "${TOOL}" >/dev/null; then
    echo "${TOOL} is required... "
    exit 1
  fi
done

FILE=.env
if [ -f "$FILE" ]; then
  set -a # export all variables created next
  # shellcheck source=.env
  source "${FILE}"
  set +a # stop exporting
fi

# file location
CURPATH="$(pwd -P)"
IMAGEPATH="${CURPATH}/assets/images"
TEMPIMAGEPATH="${CURPATH}/assets/images/temp.svg"
COMPONENTPATH="./modules"
DOCUMENTATIONPATH="./documentation"

# load libraries
for FILE in bin/lib/*; do
  set -a
  # this routine ranges through a folder of files that we don't explicitly know (@davidsneighbour)
  # see https://github.com/koalaman/shellcheck/wiki/SC1090
  # shellcheck source=/dev/null
  source "${FILE}"
  set +a
done

echo -e "${COLOR_YELLOW}"
echo "================================================================"
echo "Recreating component header images and updating release files..."
echo "================================================================"
echo -e "${COLOR_LIGHT_GREEN}"

for DIRNAME in "${COMPONENTPATH}"/*/; do

  if [[ $DIR == 'references' ]]; then
    continue
  fi

  DIR=$(basename "$DIRNAME")
  echo "for ${DIR}"

  TERM=${DIR/hugo\-/}
  find_string='id="componentname">NAME'
  replace_string=">${TERM^^} "
  sed -E "s/${find_string}/${replace_string}/" "${IMAGEPATH}"/components-header.svg >"${IMAGEPATH}"/temp2.svg

  if [ -f "${DIRNAME}/package.json" ]; then
    VERSION=$(node -pe "require(\"${DIRNAME}/package.json\")[\"version\"]")
    find_string='id="componentversion">NAME'
    replace_string=">${VERSION}"
  fi

  sed -E "s/${find_string}/${replace_string}/" "${IMAGEPATH}"/temp2.svg >"${IMAGEPATH}"/temp.svg

  if [ -d "${DOCUMENTATIONPATH}/${DIR}" ]; then
    inkscape "${TEMPIMAGEPATH}" --export-filename="${DOCUMENTATIONPATH}/${DIR}/header-card.png" &>/dev/null
  else
    if [ -d "${DIRNAME}/documentation" ]; then
      inkscape "${TEMPIMAGEPATH}" --export-filename="${DIRNAME}/documentation/header-card.png" &>/dev/null
    else
      echo "Neither ${DOCUMENTATIONPATH}/${DIR} nor ${DIRNAME}/documentation exist."
    fi
  fi

  optipng -strip all -quiet -o7 "${DOCUMENTATIONPATH}"/"${DIR}"/header-card.png
  rm -f "${TEMPIMAGEPATH}"

done

rm -f "${CURPATH}/assets/images/temp.svg"
rm -f "${CURPATH}/assets/images/temp2.svg"

git add documentation
# git commit -m "chore: update component header images" --no-verify
# git push origin main

echo -e "${COLOR_YELLOW}"
echo "================================================================"
echo "done."
echo "================================================================"
echo -e "${COLOR_WHITE}"
