#!/bin/bash

# Get the current path (module path)
CURPATH="$(pwd -P)"
MODULE_NAME=$(basename "$CURPATH") # This gives us the module name (module1, module2, etc.)

# Ensure the script is run from a module directory (e.g., modules/module1)
if [[ ! "$CURPATH" =~ /modules/module[0-9]+$ ]]; then
  echo "This script must be run from within a module directory (e.g., modules/module1)"
  exit 1
fi

# Load shared functions from the root's bin directory
# shellcheck disable=SC1091
source "${CURPATH}/../../bin/repo/release/common"

set -e

check_required_tools curl git npm hugo

# Load the .env file from the module directory
load_env_vars "${CURPATH}/.env"

# Cleanup the module's public folder
rm -rf "${CURPATH}/public/"

# Calculate the release number
RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)'
step="$1"
if [ -z "$1" ]; then
  step="patch"
fi
base=$(node -pe 'require("./package.json")["version"]')
MAJOR=$(echo $base | sed -e "s#$RE#\1#")
MINOR=$(echo $base | sed -e "s#$RE#\2#")
PATCH=$(echo $base | sed -e "s#$RE#\3#")
case "$step" in
major)
  ((MAJOR += 1))
  ((MINOR = 0))
  ((PATCH = 0))
  ;;
minor)
  ((MINOR += 1))
  ((PATCH = 0))
  ;;
patch)
  ((PATCH += 1))
  ;;
esac
RELEASE="$MAJOR.$MINOR.$PATCH"
TAGNAME="modules/${MODULE_NAME}/v${RELEASE}"

# Update version in the module's citation configuration
FILE="${CURPATH}/CITATION.cff"
if test -f "$FILE"; then
  sed -i "s/^version: .*/version: ${RELEASE}/" "$FILE"
  DATE=$(date +%F)
  sed -i "s/date-released: .*/date-released: ${DATE}/" "$FILE"
  git add "$FILE"
fi

# Run the module's build task and add assets if they exist
npm run build --if-present
if [ -d "${CURPATH}/static" ]; then
  git add "${CURPATH}/static"
fi

# Update and clean up GoHugo modules and add changes to the module's repository
git add "${CURPATH}/package*"
hugo mod get -u ./...
hugo mod tidy
git add "${CURPATH}/go.mod"
FILE="${CURPATH}/go.sum"
if [ -f "$FILE" ]; then
  git add "$FILE"
fi

# Add vendor directory if it exists in the module
if [ -d "${CURPATH}/_vendor" ]; then
  hugo mod vendor
  git add "${CURPATH}/_vendor"
fi

# @TODO: Implement some form of testing if required by the modules

# Create a changelog for the final release
RELEASE_NOTES="$(npx commit-and-tag-version --dry-run | awk 'BEGIN { flag=0 } /^---$/ { if (flag == 0) { flag=1 } else { flag=2 }; next } flag == 1')"
echo "${RELEASE_NOTES}" > "${CURPATH}/changes.md"
